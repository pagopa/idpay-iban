api.key.decrypt: ${PDV_DECRYPT_API_KEY:}
kafka.topic.checkiban: ${KAFKA_TOPIC_CHECKIBAN:}
logging:
  level:
    it.gov.pagopa: ${LOG_LEVEL_PAGOPA:DEBUG}
    org:
      springframework:
        boot: ${LOG_LEVEL_SPRING_BOOT:INFO}
        cloud: ${LOG_LEVEL_SPRING_CLOUD:WARN}
        data: ${LOG_LEVEL_SPRING_DATA:INFO}
    root: ${LOG_LEVEL_ROOT:INFO}
rest-client:
  checkiban:
    apikey: ${CHECKIBAN_API_KEY:}
    authSchema: ${CHECKIBAN_AUTHSCHEMA:}
    base-url: ${CHECKIBAN_BASE_URL:}
    serviceCode: ${CHECKIBAN_SERVICE_CODE:pagopa-checkiban}
    url: ${CHECKIBAN_URL:}
  decrypt:
    base-url: ${PDV_DECRYPT_BASE_URL:}
    cf: ${PDV_DECRYPT_SERVICE_CODE:pdv-ms-tokenizer}
management.endpoints:
  web:
    exposure.include: info, health
spring:
  application:
    name: "@project.artifactId@"
  cloud:
    stream:
      binders:
        kafka-iban:
          environment:
            spring.cloud.stream.kafka.binder:
              brokers: ${KAFKA_BINDER_BROKER_ENDPOINT_LIST:}
              configuration.sasl.jaas.config: ${KAFKA_IBAN_SASL_JAAS_CONFIG:}
          type: kafka
        kafka-wallet:
          environment.spring.cloud.stream.kafka.binder:
            brokers: ${KAFKA_BINDER_BROKER_ENDPOINT_LIST:}
            configuration.sasl.jaas.config: ${KAFKA_WALLET_SASL_JAAS_CONFIG:}
          type: kafka
        kafka-errors:
          environment.spring.cloud.stream.kafka.binder:
            brokers: ${KAFKA_BINDER_BROKER_ENDPOINT_ERRORS:}
            configuration.sasl.jaas.config: ${KAFKA_ERRORS_SASL_JAAS_CONFIG:}
          type: kafka
      bindings:
        IbanQueue-in-0:
          binder: kafka-iban
          content-type: ${KAFKA_CONTENT_TYPE:application/json}
          destination: ${KAFKA_TOPIC_IBAN:}
          group: ${KAFKA_CHECKIBAN_CONSUMER_GROUP:}
        IbanQueue-out-0:
          binder: kafka-wallet
          content-type: ${KAFKA_CONTENT_TYPE:application/json}
          destination: ${KAFKA_TOPIC_WALLET:}
        IbanQueue-out-1:
          binder: kafka-errors
          content-type: ${KAFKA_CONTENT_TYPE:application/json}
          destination: ${KAFKA_TOPIC_ERRORS:}
      function:
        definition: IbanQueue
      kafka:
        binder:
          auto-create-topics: false
          configuration:
            heartbeat.interval.ms: ${KAFKA_CONFIG_HEARTBEAT_INTERVAL_MS:3000}
            session.timeout.ms: ${KAFKA_CONFIG_SESSION_TIMEOUT_MS:30000}
            request.timeout.ms: ${KAFKA_CONFIG_REQUEST_TIMEOUT_MS:60000}
            metadata.max.age.ms: ${KAFKA_CONFIG_METADATA_MAX_AGE:180000}
            sasl.mechanism: ${KAFKA_CONFIG_SASL_MECHANISM:PLAIN}
            security.protocol: ${KAFKA_CONFIG_SECURITY_PROTOCOL:SASL_SSL}
            max.request.size: ${KAFKA_CONFIG_MAX_REQUEST_SIZE:1000000}
        bindings:
          IbanQueue-in-0:
            consumer:
              startOffset: ${KAFKA_IBAN_REQUEST_START_OFFSET:${KAFKA_CONSUMER_CONFIG_START_OFFSET:earliest}}
              autoCommitOffset: ${KAFKA_IBAN_AUTO_COMMIT:${KAFKA_CONSUMER_CONFIG_AUTO_COMMIT:true}}
              standardHeaders: ${KAFKA_IBAN_STANDARD_HEADERS:${KAFKA_CONSUMER_CONFIG_STANDARD_HEADERS:both}}
              configuration:
                max.poll:
                  records: ${KAFKA_IBAN_MAX_POLL_SIZE:${KAFKA_CONSUMER_CONFIG_MAX_POLL_SIZE:500}}
                  interval.ms: ${KAFKA_IBAN_INTERVAL_TIMEOUT_MS:${KAFKA_CONFIG_MAX_POLL_INTERVAL_TIMEOUT_MS:300000}}
                connections.max.idle.ms: ${KAFKA_IBAN_REQUEST_CONNECTIONS_MAX_IDLE_MS:${KAFKA_CONSUMER_CONFIG_CONNECTIONS_MAX_IDLE_MS:180000}}
                socket.connection.setup.timeout:
                  max.ms: ${KAFKA_IBAN_REQUEST_CONNECTION_TIMEOUT_MAX_MS:${KAFKA_CONSUMER_CONFIG_CONNECTION_TIMEOUT_MAX_MS:200000}}
                  ms: ${KAFKA_IBAN_REQUEST_CONNECTION_TIMEOUT_MS:${KAFKA_CONSUMER_CONFIG_CONNECTION_TIMEOUT_MS:100000}}
          IbanQueue-out-0:
            producer:
              configuration:
                connections.max.idle.ms: ${KAFKA_IBAN_CONNECTION_MAX_IDLE_TIME:180000}
                retry.backoff.ms: ${KAFKA_IBAN_KAFKA_RETRY_MS:${KAFKA_RETRY_MS:10000}}
                linger.ms: ${KAFKA_IBAN_LINGER_MS:${KAFKA_LINGER_MS:2}}
                batch.size: ${KAFKA_IBAN_BATCH_SIZE:${KAFKA_BATCH_SIZE:16384}}
                metadata.max.idle.ms: ${KAFKA_IBAN_METADATA_MAX_IDLE_MS:${KAFKA_METADATA_MAX_IDLE_MS:180000}}
          IbanQueue-out-1:
            producer:
              configuration:
                connections.max.idle.ms: ${KAFKA_ERRORS_CONNECTION_MAX_IDLE_TIME:180000}
                retry.backoff.ms: ${KAFKA_ERRORS_KAFKA_RETRY_MS:${KAFKA_RETRY_MS:10000}}
                linger.ms: ${KAFKA_ERRORS_LINGER_MS:${KAFKA_LINGER_MS:2}}
                batch.size: ${KAFKA_ERRORS_BATCH_SIZE:${KAFKA_BATCH_SIZE:16384}}
                metadata.max.idle.ms: ${KAFKA_ERRORS_METADATA_MAX_IDLE_MS:${KAFKA_METADATA_MAX_IDLE_MS:180000}}
  config:
    activate:
      on-profile: default
  data:
    mongodb:
      database: ${MONGODB_DBNAME}
      uri: ${MONGODB_URI}
      # custom configured properties
      config:
        connectionPool:
          maxSize: ${MONGODB_CONNECTIONPOOL_MAX_SIZE:100}
          minSize: ${MONGODB_CONNECTIONPOOL_MIN_SIZE:0}
          maxWaitTimeMS: ${MONGODB_CONNECTIONPOOL_MAX_WAIT_MS:120000}
          maxConnectionLifeTimeMS: ${MONGODB_CONNECTIONPOOL_MAX_CONNECTION_LIFE_MS:0}
          maxConnectionIdleTimeMS: ${MONGODB_CONNECTIONPOOL_MAX_CONNECTION_IDLE_MS:120000}
          maxConnecting: ${MONGODB_CONNECTIONPOOL_MAX_CONNECTING:2}
