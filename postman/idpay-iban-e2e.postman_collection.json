{
	"info": {
		"_postman_id": "4d8dd0ba-f7e7-410c-a206-ad09458804e4",
		"name": "Iban - e2e",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26036736"
	},
	"item": [
		{
			"name": "Happy Case",
			"item": [
				{
					"name": "Iban List - empty list",
					"item": [
						{
							"name": "Generate Token IO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Retrieve Token', () => {\r",
											"    //verify response HTTP status \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "",
										"type": "default"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bpd/pagopa/api/v1/login?fiscalCode={{$randomPassword}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bpd",
										"pagopa",
										"api",
										"v1",
										"login"
									],
									"query": [
										{
											"key": "fiscalCode",
											"value": "{{$randomPassword}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Iban List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"     let jsonResponse = pm.response.json()\r",
											"    pm.expect(jsonResponse.ibanList.length).equals(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/idpay/iban",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"iban"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Iban List - status OK",
					"item": [
						{
							"name": "Generate Token IO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Retrieve Token', () => {\r",
											"    //verify response HTTP status \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "",
										"type": "default"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bpd/pagopa/api/v1/login?fiscalCode=TRNFNC96R02H501I",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bpd",
										"pagopa",
										"api",
										"v1",
										"login"
									],
									"query": [
										{
											"key": "fiscalCode",
											"value": "TRNFNC96R02H501I"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Iban List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Iban status test\", function () {\r",
											"    let responseJson = pm.response.json()\r",
											"    pm.expect(responseJson.ibanList[0].checkIbanStatus).to.be.eql('OK');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/idpay/iban",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"iban"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Iban List - status UNKNOWN",
					"item": [
						{
							"name": "Generate Token IO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Retrieve Token', () => {\r",
											"    //verify response HTTP status \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "",
										"type": "default"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bpd/pagopa/api/v1/login?fiscalCode={{CF_GAM}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bpd",
										"pagopa",
										"api",
										"v1",
										"login"
									],
									"query": [
										{
											"key": "fiscalCode",
											"value": "{{CF_GAM}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Iban List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Iban status test\", function () {\r",
											"    let responseJson = pm.response.json()\r",
											"    pm.expect(responseJson.ibanList[0].checkIbanStatus).to.be.eql('UNKNOWN_PSP');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/idpay/iban",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"iban"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Iban Detail",
					"item": [
						{
							"name": "Generate Token IO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Retrieve Token', () => {\r",
											"    //verify response HTTP status \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "",
										"type": "default"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bpd/pagopa/api/v1/login?fiscalCode=GMMMRA79L13H703E",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bpd",
										"pagopa",
										"api",
										"v1",
										"login"
									],
									"query": [
										{
											"key": "fiscalCode",
											"value": "GMMMRA79L13H703E"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Iban List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/idpay/iban/IT81N0305801604100572105630",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"iban",
										"IT81N0305801604100572105630"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Unhappy case",
			"item": [
				{
					"name": "Iban Detail - iban not found - 404",
					"item": [
						{
							"name": "Generate Token IO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Retrieve Token', () => {\r",
											"    //verify response HTTP status \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "",
										"type": "default"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bpd/pagopa/api/v1/login?fiscalCode={{$randomPassword}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bpd",
										"pagopa",
										"api",
										"v1",
										"login"
									],
									"query": [
										{
											"key": "fiscalCode",
											"value": "{{$randomPassword}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Iban List Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"pm.test(\"Message test\", function () {\r",
											"    const responseJson = pm.response.json();\r",
											"    pm.expect(responseJson.message).to.eql('Iban not found.');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/idpay/iban/{{Iban-fake}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"iban",
										"{{Iban-fake}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Iban List - KO",
					"item": [
						{
							"name": "Generate Token IO",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Retrieve Token', () => {\r",
											"    //verify response HTTP status \r",
											"    pm.response.to.have.status(200);\r",
											"    pm.collectionVariables.set(\"tokenIO\", pm.response.text());\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "",
										"type": "default"
									},
									{
										"key": "Ocp-Apim-Trace",
										"value": "true",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bpd/pagopa/api/v1/login?fiscalCode={{CF_GAM}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bpd",
										"pagopa",
										"api",
										"v1",
										"login"
									],
									"query": [
										{
											"key": "fiscalCode",
											"value": "{{CF_GAM}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Iban List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Iban status test\", function () {\r",
											"     let jsonResponse = pm.response.json()\r",
											"     const foundIban = jsonResponse.ibanList.some((item) =>{\r",
											"         return item.iban === \"IT43O0326822300052755845000\"\r",
											"     });\r",
											"    pm.expect(foundIban).equals(false); \r",
											"});\r",
											"  \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenIO}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/idpay/iban",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"idpay",
										"iban"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "tokenIO",
			"value": ""
		},
		{
			"key": "CF_GAM",
			"value": "GMMMRA79L13H703E"
		},
		{
			"key": "CF-TRI",
			"value": "TRNFNC96R02H501I"
		},
		{
			"key": "Iban-fake",
			"value": "43A0305801604100572053871"
		}
	]
}